
Number 8
section 11
step 1
get http://csr1kv/restconf/api/config/native

step 3
http://csr1kv/restconf/api/config/native/ip/route?deep

step 4
http://csr1kv/restconf/api/config/native/interface/loopback/100

step 5

Postman HTTP PATCH body:

{
  "ned:route": {
    "ip-route-interface-forwarding-list": [
      {
        "prefix": "10.0.0.0",
        "mask": "255.0.0.0",
        "fwd-list": [
          {
            "fwd": "192.168.1.1"
          }
        ]
      },
      {
        "prefix": "20.20.20.0",
        "mask": "255.255.255.0",
        "fwd-list": [
          {
            "fwd": "192.168.1.1"
          }
        ]
      },
      {
        "prefix": "30.30.30.0",
        "mask": "255.255.255.0",
        "fwd-list": [
          {
            "fwd": "192.168.1.1"
          }
        ]
      },
      {
        "prefix": "172.16.0.0",
        "mask": "255.255.0.0",
        "fwd-list": [
          {
            "fwd": "192.168.1.1"
          }
        ]
      }
    ]
  }
}


step 6
otherone:
Postman HTTP PUT body:
http://csr1kv/restcong/api/config/native/interface/loopback/100


{
  "ned:Loopback": {
    "name": 100,
    "ip": {
      "address": {
        "primary": {
          "address": "100.100.1.1",
          "mask": "255.255.255.0"
        }
      }
    }
  }
}


ensure routes have been added.
csr1kv. 
show run | inc route
show run inter lo100

step 7
Navigate to the files/module2/lab5 directory and execute a script xe_rc_static_routes.py. 
Troubleshoot and fix this script so that it address the expected static routes.
When troubleshooting the xe_rc_static_routes.py script, make sure you find any mistakes in Content-Type and make sure the body of the request is properly formatted.

#!/usr/bin/env python

import requests
import json
import time
import collections
from requests.auth import HTTPBasicAuth
requests.packages.urllib3.disable_warnings()

if __name__ == "__main__":

    auth = HTTPBasicAuth('cisco', 'cisco')
    headers = {
        'Accept': 'application/vnd.yang.data+json',
        'Content-Type': 'application/vnd.yang.data+json'
    }

    print 'API Call #1 - DISPLAY CURRENT ROUTES with NEXT-HOPS'
    print '-----------'

    url = 'http://csr1kv/restconf/api/config/native/ip/route?deep'
    response = requests.get(url, verify=False, headers=headers, auth=auth)

    print 'Status Code: ' + str(response.status_code)
    if response.text:
        parse = json.loads(response.text)
        print json.dumps(parse, indent=4)

    time.sleep(2)

    print 'API Call #2 - ADD ROUTES'
    print '-----------'

    url = 'http://csr1kv/restconf/api/config/native/ip/route'

    route = collections.OrderedDict()

    route['prefix'] = '50.40.40.0'
    route['mask'] = '255.255.255.0'
    route['fwd-list'] = [{'fwd': '192.168.1.1'}]
    ip_route_list = [route]

    routes_to_add = {
        "ned:route": {
            "ip-route-interface-forwarding-list": ip_route_list
        }
    }

    response = requests.patch(url, data=json.dumps(routes_to_add), verify=False, headers=headers, auth=auth)

    print 'Status Code: ' + str(response.status_code)
    if response.text:
        parse = json.loads(response.text)
        print json.dumps(parse, indent=4)

    time.sleep(2)

    print 'API Call #3 - VERIFY ROUTES ADDED'
    print '-----------'

    url = 'http://csr1kv/restconf/api/config/native/ip/route?deep'
    response = requests.get(url, verify=False, headers=headers, auth=auth)

    print 'Status Code: ' + str(response.status_code)
    if response.text:
        parse = json.loads(response.text)
        print json.dumps(parse, indent=4)

